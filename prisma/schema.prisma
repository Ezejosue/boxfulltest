// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

/**
 * Modelo de Usuario
 */
model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName String?
  lastName  String?
  email     String   @unique
  phone     String?
  password  String   // Cambia esto según cómo manejes la seguridad

  // Relación uno-a-muchos con las órdenes
  orders    Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  PENDING    // En espera
  PROCESSING // En proceso
  SHIPPED    // Enviado
  DELIVERED  // Entregado
  CANCELLED  // Cancelado
}

/**
 * Modelo de Orden
 */
model Order {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId

  // Relación con User
  userId          String      @db.ObjectId
  user            User        @relation(fields: [userId], references: [id])

  // Estado de la orden
  status          OrderStatus @default(PENDING)

  // Datos de la orden (basado en la captura)
  pickupAddress   String    // Dirección de recolección
  scheduledDate   DateTime  // Fecha programada
  firstName       String    // Nombres
  lastName        String    // Apellidos
  phone           String    // Teléfono
  email           String    // Correo electrónico

  // Datos del destinatario
  deliveryAddress String    // Dirección del destinatario
  department      String    // Departamento
  municipality    String    // Municipio
  referencePoint  String?   // Punto de referencia (opcional)
  instructions    String?   // Indicaciones (opcional)

  // Relación con paquetes (bultos)
  packages        Package[]

  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

/**
 * Modelo de Paquete (bultos)
 */
model Package {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId

  // Relación con Order
  orderId  String
  order    Order   @relation(fields: [orderId], references: [id])

  // Dimensiones y peso
  lengthCm Int
  heightCm Int
  widthCm  Int
  weightLb Float  // Peso en libras

  // Contenido
  content  String
}
